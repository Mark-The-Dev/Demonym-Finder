{"version":3,"sources":["Demonym.js","CountrySelector.js","App.js","index.js"],"names":["Demonym","props","className","name","country","CountrySelector","value","this","changeHandler","countries","find","options","map","i","key","htmlFor","id","onChange","e","changeSelection","target","Component","DemonymApp","state","selected","fetch","then","response","ok","Error","json","data","Object","keys","item","setState","error","catch","err","message","demon","setSelected","ReactDOM","render","document","getElementById"],"mappings":"+SAGe,SAASA,EAAQC,GAE9B,OACE,yBAAKC,UAAU,WAAf,KACKD,EAAME,KADX,eAC6BF,EAAMG,S,UC+BxBC,E,8KAjCGC,GACd,GAAa,SAAVA,EACDC,KAAKN,MAAMO,cAAc,UACpB,CAEL,IAAMJ,EAAUG,KAAKN,MAAMQ,UAAUC,MAAK,SAAAN,GAAO,OAAIA,EAAQD,OAASG,KACtEC,KAAKN,MAAMO,cAAcJ,M,+BAInB,IAAD,OACDO,EAAUJ,KAAKN,MAAMQ,UAAUG,KAAI,SAACR,EAASS,GAAV,OAAgB,4BACzDP,MAAOF,EAAQD,KACfW,IAAKD,GACJT,EAAQD,SAET,OACE,yBAAKD,UAAU,oBACb,8BACE,2BAAOa,QAAQ,WAAf,qBACA,4BACEC,GAAG,UACHb,KAAK,UACLc,SAAU,SAAAC,GAAC,OAAI,EAAKC,gBAAgBD,EAAEE,OAAOd,SAC7C,4BAAQA,MAAM,QAAd,iBACCK,S,GA3BiBU,aCiEfC,E,kDA5Db,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CACXd,UAAW,GACXe,SAAU,MAJK,E,gEAQE,IAAD,OAClBC,MAAM,+DACHC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,iDAElB,OAAOF,KAERD,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAMtB,EAAYuB,OAAOC,KAAKF,GAAMnB,KAAI,SAAAE,GAAG,OAAIiB,EAAKjB,GAAKoB,KAAK,MAC9D,EAAKC,SAAS,CACZ1B,YACA2B,MAAO,UAGVC,OAAM,SAAAC,GACL,EAAKH,SAAS,CACZC,MAAOE,EAAIC,e,kCAKPf,GACVjB,KAAK4B,SAAS,CACZX,e,+BAIM,IAAD,OACDgB,EAAQjC,KAAKgB,MAAMC,SACjB,kBAAC,EAAD,CAASrB,KAAMI,KAAKgB,MAAMC,SAAS,iBAAkBpB,QAASG,KAAKgB,MAAMC,SAASrB,OAClF,yBAAKD,UAAU,4BAAf,0BAEMK,KAAKgB,MAAMa,OAA6C7B,KAAKgB,MAAMa,MAEjF,OACE,yBAAKlC,UAAU,eACb,gCACE,gDAGF,kBAAC,EAAD,CACEO,UAAWF,KAAKgB,MAAMd,UACtBD,cAAe,SAAAgB,GAAQ,OAAI,EAAKiB,YAAYjB,MAE7CgB,O,GAxDgBnB,aCAzBqB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dff546cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Demonym.css';\r\n\r\nexport default function Demonym(props) {\r\n\r\n  return (\r\n    <div className=\"demonym\">\r\n      A {props.name} comes from {props.country}\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport './CountrySelector.css';\r\n\r\nclass CountrySelector extends Component {\r\n\r\n  changeSelection(value) {\r\n    if(value === \"None\") {\r\n      this.props.changeHandler(null);\r\n    } else {\r\n      // find the country selected\r\n      const country = this.props.countries.find(country => country.name === value);\r\n      this.props.changeHandler(country);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const options = this.props.countries.map((country, i) => <option \r\n    value={country.name} \r\n    key={i}>\r\n    {country.name}\r\n    </option>);\r\n    return (\r\n      <div className=\"country_selector\">\r\n        <form>\r\n          <label htmlFor=\"country\">Select a country:</label>\r\n          <select\r\n            id=\"country\"\r\n            name=\"country\"\r\n            onChange={e => this.changeSelection(e.target.value)}>\r\n            <option value=\"None\">Select one...</option>\r\n            {options}\r\n          </select>\r\n        </form>\r\n      </div>\r\n    );      \r\n  }\r\n}\r\n\r\nexport default CountrySelector;","import React, { Component } from 'react';\nimport './App.css'\n\nimport Demonym from './Demonym';\nimport CountrySelector from './CountrySelector';\n\nclass DemonymApp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://country.register.gov.uk/records.json?page-size=5000')\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Something went wrong, please try again later.')\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(data => {\n        const countries = Object.keys(data).map(key => data[key].item[0]);\n        this.setState({\n          countries,\n          error: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  setSelected(selected) {\n    this.setState({\n      selected\n    });\n  }\n\n  render() {\n    const demon = this.state.selected\n          ? <Demonym name={this.state.selected['citizen-names']} country={this.state.selected.name}/>\n          : <div className=\"demonym_app__placeholder\">Select a country above</div>;\n\n    const error = this.state.error ? <div className=\"demonym_app__error\">{this.state.error}</div> : \"\";\n\n    return (\n      <div className=\"demonym_app\">\n        <header>\n          <h1>Find a Demonym!</h1>\n          </header>\n        \n        <CountrySelector\n          countries={this.state.countries}\n          changeHandler={selected => this.setSelected(selected)}/>\n          \n        {demon}\n      </div>\n    );\n  }\n}\n\nexport default DemonymApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}